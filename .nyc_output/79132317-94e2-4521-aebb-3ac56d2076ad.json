{"/home/crisgarner/Projects/cryptex/contract/buidler.config.ts":{"path":"/home/crisgarner/Projects/cryptex/contract/buidler.config.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":53}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":48}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":51}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":40}},"7":{"start":{"line":9,"column":17},"end":{"line":9,"column":37}},"8":{"start":{"line":10,"column":24},"end":{"line":10,"column":51}},"9":{"start":{"line":11,"column":15},"end":{"line":47,"column":1}},"10":{"start":{"line":48,"column":0},"end":{"line":48,"column":25}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"/home/crisgarner/Projects/cryptex/contract/buidler.config.ts","sources":["/home/crisgarner/Projects/cryptex/contract/buidler.config.ts"],"names":[],"mappings":";;AAAA,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC;AAC3B,sDAAmE;AAEnE,kBAAS,CAAC,2BAA2B,CAAC,CAAC;AACvC,kBAAS,CAAC,8BAA8B,CAAC,CAAC;AAC1C,kBAAS,CAAC,gBAAgB,CAAC,CAAC;AAC5B,kBAAS,CAAC,mBAAmB,CAAC,CAAC;AAE/B,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,QAAkB,CAAC;AAChD,MAAM,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,eAAyB,CAAC;AAE9D,MAAM,MAAM,GAAkB;IAC7B,YAAY;IACZ,aAAa,EAAE;QACd,QAAQ,EAAE;YACT,OAAO,EAAE,CAAC;SACV;KACD;IACD,IAAI,EAAE;QACL,OAAO,EAAE,OAAO;KAChB;IACD,QAAQ,EAAE;QACT,UAAU,EAAE,EAAE;QACd,OAAO,EAAE;YACR,GAAG,EAAE,uBAAuB;YAC5B,QAAQ,EAAE,EAAC,QAAQ,EAAE,eAAe,EAAC;SACrC;QACD,OAAO,EAAE;YACR,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,eAAe;YAChC,QAAQ,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAC;SAC9B;QACD,KAAK,EAAE;YACN,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,aAAa;YAC9B,QAAQ,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAC;SAC9B;QACD,OAAO,EAAE;YACR,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY;YAC7B,QAAQ,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAC;SAC9B;KACD;IACD,SAAS,EAAE;QACV,iDAAiD;QACjD,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,aAAuB;QACxC,6BAA6B;QAC7B,sCAAsC;QACtC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,iBAA2B;KAC/C;CACD,CAAC;AAEF,kBAAe,MAAM,CAAC","sourcesContent":["require(\"dotenv\").config();\nimport {BuidlerConfig, usePlugin} from \"@nomiclabs/buidler/config\";\n\nusePlugin(\"@nomiclabs/buidler-waffle\");\nusePlugin(\"@nomiclabs/buidler-etherscan\");\nusePlugin(\"buidler-deploy\");\nusePlugin(\"solidity-coverage\");\n\nconst mnemonic = process.env.MNENOMIC as string;\nconst ganacheMnemonic = process.env.GANACHEMNENOMIC as string;\n\nconst config: BuidlerConfig = {\n\t//@ts-ignore\n\tnamedAccounts: {\n\t\tdeployer: {\n\t\t\tdefault: 0, // here this will by default take the first account as deployer\n\t\t},\n\t},\n\tsolc: {\n\t\tversion: \"0.6.8\",\n\t},\n\tnetworks: {\n\t\tbuidlerevm: {},\n\t\tganache: {\n\t\t\turl: \"http://127.0.0.1:8545\",\n\t\t\taccounts: {mnemonic: ganacheMnemonic},\n\t\t},\n\t\trinkeby: {\n\t\t\turl: process.env.RINKEBY_API_URL,\n\t\t\taccounts: {mnemonic: mnemonic},\n\t\t},\n\t\tkovan: {\n\t\t\turl: process.env.KOVAN_API_URL,\n\t\t\taccounts: {mnemonic: mnemonic},\n\t\t},\n\t\tmainnet: {\n\t\t\turl: process.env.MAIN_API_URL,\n\t\t\taccounts: {mnemonic: mnemonic},\n\t\t},\n\t},\n\tetherscan: {\n\t\t// The url for the Etherscan API you want to use.\n\t\turl: process.env.ETHERSCAN_URL as string,\n\t\t// Your API key for Etherscan\n\t\t// Obtain one at https://etherscan.io/\n\t\tapiKey: process.env.ETHERSCAN_API_KEY as string,\n\t},\n};\n\nexport default config;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"58e7a6e6a5b90f757824da494e6b7a54f785badc","contentHash":"c40adc39f43197694e6a51e85f6ef006d47a96521065f6a625d81028fe44af59"}}